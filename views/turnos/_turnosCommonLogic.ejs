<script>
const {$} = window;
const monthArray = [
	"<%=i18n.turnos.months.jan%>",
	"<%=i18n.turnos.months.feb%>",
	"<%=i18n.turnos.months.mar%>",
	"<%=i18n.turnos.months.apr%>",
	"<%=i18n.turnos.months.may%>",
	"<%=i18n.turnos.months.jun%>",
	"<%=i18n.turnos.months.jul%>",
	"<%=i18n.turnos.months.aug%>",
	"<%=i18n.turnos.months.sep%>",
	"<%=i18n.turnos.months.oct%>",
	"<%=i18n.turnos.months.nov%>",
	"<%=i18n.turnos.months.dec%>"
];

const dayArray = [
	"<%=i18n.turnos.days.d%>",
	"<%=i18n.turnos.days.l%>",
	"<%=i18n.turnos.days.m%>",
	"<%=i18n.turnos.days.x%>",
	"<%=i18n.turnos.days.j%>",
	"<%=i18n.turnos.days.v%>",
	"<%=i18n.turnos.days.s%>"
];

const formatDate = (currentDate) => `${currentDate.getDate()} ${monthArray[currentDate.getMonth()]}`; // + " de " + currentDate.getFullYear();
const getDashDate = function(currentDate) {
    return currentDate.getDate() + "-" + currentDate.getMonth() + "-" + currentDate.getFullYear();
}
const filterTurnos = (date) => {

    const turnos = $(".turno:not(.add-turno");

    turnos.addClass("hidden");
    turnos.each((index, turno) => {

        const $turno = $(turno);
        if ($turno.data("date") === date) {
            $turno.removeClass("hidden");
        }

    });

};

const updateDate = (date) => {
    console.log("update", date)
    date.setHours(0,0,0,0)
    $("#date").val(date);
    $("#currentDate").html(formatDate(date));
    filterTurnos(getDashDate(date));
    $("#start").focus();

};

const getQueryStringValue = (key) => decodeURIComponent(window.location.search.replace(new RegExp(`^(?:.*[&\\?]${encodeURIComponent(key).replace(/[\.\+\*]/g, "\\$&")}(?:\\=([^&]*))?)?.*$`, "i"), "$1"));


$(function () {

    $.datepicker.setDefaults({
        "firstDay": 1,
        "dayNamesMin": dayArray.map(a=>a.slice(0,1).toLowerCase()),
        "monthNames": monthArray.map(a=>a.toLowerCase()),
        "monthNamesShort": monthArray.map(a=>a.slice(0,3)),
        "dayNamesShort": dayArray.map(a=>a.slice(0,3)),
        "dayNames": dayArray,
        "isRTL": false,
        "showMonthAfterYear": false,
        "yearSuffix": "",
        "dateFormat": "dd/mm/yy",
        "closeText": "<%=i18n.turnos.arrows.closeText%>",
        "prevText": "<%=i18n.turnos.arrows.prevText%>",
        "nextText": "<%=i18n.turnos.arrows.nextText%>",
        "currentText": "<%=i18n.turnos.arrows.currentText%>"

    });


    $.datepicker.setDefaults($.datepicker.regional.es);
    $("#datepicker").datepicker({
        "onSelect" () {

            const date = $("#datepicker").datepicker("getDate");

            updateDate(date);

        },
        "beforeShowDay" (date) {

            if ($.inArray(date.getTime(), window.selectedDates) !== -1) {

                return [
                    true,
                    "turn-day-highlight",
                    "<%=i18n.turnos.todayEscapeRoom%>"
                ];

            }

            return [
                true,
                "",
                ""
            ];

        }

    });
    const myDate = new Date(getQueryStringValue("date"));

    if (myDate && !isNaN(myDate.getDate())) {

        $("#datepicker").datepicker("setDate", new Date(myDate));

    }
    const date = $("#datepicker").datepicker("getDate");

    updateDate(date);

    $("#newForm").on("submit", function () {

        const dateSubmitted = new Date($("#date").val());
        const time = $("#start").val().
            split(":");

        const res = new Date(Date.UTC(dateSubmitted.getUTCFullYear(), dateSubmitted.getUTCMonth(), dateSubmitted.getUTCDate()+1, time[0], time[1]));
        $("#date").val(res);

        return true;

    });


});

</script>